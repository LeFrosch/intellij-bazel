### from the language spec ###

def load(module, *args, **kwargs): ...

def abs(value): ...

def any(seq): ...

def all(seq): ...

def bool(value): ...

def bytes(value): ...

def dir(value): ...

def enumerate(seq, offset = 0): ...

def float(value): ...

def fail(*args): ...

def getattr(value, name, default = None): ...

def hasattr(value, name): ...

def hash(value): ...

def int(value, base=10): ...

def len(seq): ...

def min(seq): ...

def max(seq): ...

def print(*args, sep=" "): ...

def repr(value): ...

def reversed(seq): ...

def sorted(seq): ...

def str(value): ...

def type(value): ...

def zip(*seqs): ...

class dict:
  def clear(self): ...

  def get(self, key, default=None): ...

  def items(self): ...

  def keys(self): ...

  def pop(self, default=None): ...

  def popitem(self, default=None): ...

  def setdefault(self, key, default=None): ...

  def update(self, pairs, **kwargs): ...

  def values(self): ...

  def __init__(self, seq=(), **kwargs): ...

class list:
  def append(self, value): ...

  def clear(self): ...

  def extend(self, seq): ...

  def index(self, value, start, end): ...

  def insert(self, index, value): ...

  def pop(self, index=0): ...

  def remove(self, value): ...

  def __init__(self, seq=()): ...

class tuple:
  def __init__(self, seq=()): ...

class range:
  def __init__(self, *args): ... # real signature unknown

### from the bazel documentation ###

def select(value, no_match_error=None): ...
